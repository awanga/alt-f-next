# this is not a script, it is intended to be sourced,
# so defined variables will be available at the current shell

# tail compare: config files have a time stamp in the first four lines, compare remainder
# there might be are a few other minor differences, ignore them also
tailcmp() {
	local st=0
	if ! test -f $1 -a -f $2; then
		echo "No $3 configuration found"
		return 0
	fi

	f1=$(mktemp); f2=$(mktemp)
	tail -n +5 $1 | grep -vE 'CONFIG_PREFIX|KERNEL_HEADERS|CROSS_COMPILER_PREFIX|CONFIG_CC_OPTIMIZE_FOR_SIZE' > $f1
	tail -n +5 $2 | grep -vE 'CONFIG_PREFIX|KERNEL_HEADERS|CROSS_COMPILER_PREFIX|CONFIG_CC_OPTIMIZE_FOR_SIZE' > $f2

	#elif cmp -si $(head -n 4 $1 | wc -c):$(head -n 4 $2 | wc -c) $1 $2; then
	if cmp -s $f1 $f2; then
		echo "No $3 configuration changes"
	else
		echo "Configuration for $3 has changed. To examine differences use"
		echo "   diff $1 $(echo $2 | sed "s|$BLDDIR|\$BLDDIR|")"
		st=1
	fi
	rm $f1 $f2
	return $st
}

# board change, are there config files changes worth saving?
check_current() {
	local st=0
	for i in BR2_UCLIBC_VERSION_STRING BR2_UCLIBC_CONFIG \
		BR2_BUSYBOX_VERSION BR2_PACKAGE_BUSYBOX_CONFIG \
		BR2_TOOLCHAIN_BUILDROOT_LIBC \
		BR2_LINUX_KERNEL_VERSION BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE; do
		eval $(grep ^$i .config)
	done

	cbusybox=$BLDDIR/build/busybox-$BR2_BUSYBOX_VERSION/.config
	ckernel=$BLDDIR/$BR2_PROJECT/linux-$BR2_LINUX_KERNEL_VERSION/.config

	tailcmp local/$BR2_PROJECT/$BR2_PROJECT.config .config board || ((st++))
	tailcmp $BR2_PACKAGE_BUSYBOX_CONFIG $cbusybox Busybox || ((st++))
	tailcmp $BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE $ckernel Kernel || ((st++))

	if test $BR2_TOOLCHAIN_BUILDROOT_LIBC = "uclibc"; then
		cuclibc=$BLDDIR/build/uClibc-$BR2_UCLIBC_VERSION_STRING/.config
		tailcmp $BR2_UCLIBC_CONFIG $cuclibc uClibc || ((st++))
	fi
	return $st
}

do_exports() {
	eval $(grep ^BR2_PROJECT .config)
	eval $(grep ^BR2_LINUX_KERNEL_VERSION .config)
	linux_version=$BR2_LINUX_KERNEL_VERSION

	export BLDDIR=$bdir
	export PKGDIR=$BLDDIR/build
	export ROOTFS=$BLDDIR/target
	export KERNEL=$BLDDIR/build/linux-$linux_version
	export STAGING=$BLDDIR/staging
	export HOSTDIR=$BLDDIR/host
	export BINARIES=$BLDDIR/binaries/$board

	if test -z $BR2_TOOLCHAIN_BUILDROOT_MUSL; then
		export UCLUBC=$(realpath $BLDDIR/build/musl-[0-9]*)
	else
		export UCLIBC=$(realpath $BLDDIR/build/uClibc-$BR2_UCLIBC_VERSION_STRING)
	fi

	if test -z "$OPATH"; then OPATH=$PATH; fi
	export PATH=$HOSTDIR/usr/bin:$OPATH

	export EDITOR=uemacs

	#make olddefconfig
	if ! test -d "$BLDDIR"; then make dirs; fi

	echo -e "\nBuild ready for \"$board\" at \"$BLDDIR\""
}

force=""
if test "$1" = "-f"; then
	force=y
	shift
fi

if test $# = 2; then
	bdir=$2
elif test -n "$BLDDIR"; then
	bdir=$BLDDIR
else
	bdir=$PWD/output
fi

BLDDIR=$bdir
BR2_PROJECT=""

if test $# = 0 -a ! -f .config; then
	echo "No board defined and no .config found."
	echo "Usage: . exports.sh [-f (force)] [board ($(ls local | tr '\n' ' '))] [build dir]"
	return 1

elif test $# = 0 -a -f .config; then
	eval $(grep ^BR2_PROJECT .config)
	board=$BR2_PROJECT
	do_exports
	return 0

elif test $# -ge 1 -a ! -f .config; then
	board=$1
	if test -f $BLDDIR/../board/dns32x/$board/$board.config; then
		#cp $BLDDIR/../board/dns32x/$board/$board.config .config
		do_exports
		return 0
	else
		echo "No config file found for $board"
		return 1
	fi

elif test $# -ge 1 -a -f .config; then
	board=$1
	eval $(grep ^BR2_PROJECT .config)

	if test "$board" = "$BR2_PROJECT"; then
		do_exports
		return 0
	elif test -z "$force"; then
		if ! check_current; then
			board=$BR2_PROJECT
			echo -e "\nConsider making \"make savedefconfig\" or use \". exports -f $*\" to ignore changes."
			echo "Continue using existing .config for $board"
			do_exports >& /dev/null
			return 1
		fi
	fi

	if test -f $BLDDIR/../board/dns32x/$board/$board.config; then
		#cp $BLDDIR/../board/dns32x/$board/$board.config .config
		do_exports
		return 0
	else
		echo "No config file found for $board"
		return 1
	fi
fi
