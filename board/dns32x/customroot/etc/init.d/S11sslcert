#!/bin/sh

DESC="Box SSL certificate"
NAME=sslcert
TYPE=required

BOX_PEM=/etc/ssl/certs/server.pem
BOX_CRT=/etc/ssl/certs/server.crt
BOX_KEY=/etc/ssl/certs/server.key
VSFTP_CERT=/etc/ssl/certs/vsftpd.pem
BOX_CNF=/etc/ssl/server.cnf

. /etc/init.d/common

# FIXME: this key is generated when the host name is still a generic one, and a new key is not
# generated when the host name is changed. Programs that check the key's host name against the
# host name will fail.
# Generating a new server certificate whenever the host name changes means that the user has to
# make apps accept the the certificate, which is not friendly.

case "$1" in
	start)

	echo -n "Starting $NAME: "

	if test ! -e $BOX_PEM -a -e $VSFTP_CERT; then # legacy, only vsftpd.pem exists
		echo -n "Using vsftpd SSL self-signed certificate... "
		mv $VSFTP_CERT $BOX_PEM

	elif test ! -e $BOX_PEM; then # first time, none exists
		echo -n "Creating SSL self-signed certificate... "
		HOST=$(hostname) FHOST=$(hostname -f) BOX=$(cat /tmp/board) openssl req -x509 \
		-nodes -days 3650 -newkey rsa:2048 -keyout $BOX_PEM -out $BOX_PEM -config $BOX_CNF
	fi

	# generate box crt and key, needed by some packages
	sed -n '/BEGIN CERTIFICATE/,/END CERTIFICATE/p' $BOX_PEM > $BOX_CRT
	sed -n '/BEGIN PRIVATE KEY/,/END PRIVATE KEY/p' $BOX_PEM > $BOX_KEY

	chmod og-r $BOX_PEM $BOX_CRT $BOX_KEY
	echo "OK."

	;;

	stop) echo "Stopping $NAME: OK." ;;
	status) echo "$NAME stopped"; exit 1 ;;
	restart) restart $NAME ;;
	*) echo Usage: $0 "start|stop|status|restart" ;;
esac
